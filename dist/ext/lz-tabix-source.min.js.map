{"version":3,"sources":["webpack://[name]/webpack/bootstrap","webpack://[name]/./esm/ext/lz-tabix-source.js","webpack://[name]/external \"tabix\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","install","LocusZoom","BaseAdapter","Adapters","add","init","parser_func","url_data","Error","this","parser","url_tbi","params","_overfetch","overfetch","_reader_promise","urlReader","catch","state","Promise","resolve","reject","region_start","start","region_end","end","extra_amount","then","reader","fetch","chr","data","err","map","use","tabix"],"mappings":"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","file":"ext/lz-tabix-source.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","/**\n * An adapter that fetches data from a remote Tabix-indexed datafile, instead of a RESTful API.\n * Requires a generic user-specified parser function.\n *\n * ### Features provided\n * * {@link module:LocusZoom_Adapters~TabixUrlSource}\n *\n * ### Loading and usage\n * The page must incorporate and load all libraries before this file can be used, including:\n * - Vendor assets\n * - LocusZoom\n * - tabix-reader (available via NPM or a related CDN)\n *\n * To use in an environment without special JS build tooling, simply load the extension file as JS from a CDN (after any dependencies):\n * ```\n * <script src=\"https://cdn.jsdelivr.net/npm/locuszoom@INSERT_VERSION_HERE/dist/ext/lz-tabix-source.min.js\" type=\"application/javascript\"></script>\n * ```\n *\n * To use with ES6 modules, the plugin must be loaded and registered explicitly before use:\n * ```\n * import LocusZoom from 'locuszoom';\n * import LzTabixSource from 'locuszoom/esm/ext/lz-tabix-source';\n * LocusZoom.use(LzTabixSource);\n * ```\n *\n * Then use the Adapter made available by this extension. For example:\n *\n * ```javascript\n * data_sources.add(\"assoc\", [\"TabixUrlSource\", {\n *     url_data: 'https://s3-bucket.example/tabix-indexed-bgzip-file.gz',\n *     parser_func: (line_of_text) => object_of_parsed_data_for_this_line,\n *     // Tabix performs region queries. If you are fetching interval data (one end outside the edge of the plot), then\n *     // \"overfetching\" can help to ensure that data partially outside the view region is retrieved\n *     // If you are fetching single-point data like association summary stats, then overfetching is unnecessary\n *     params: { overfetch: 0.25 }\n * }]);\n * ```\n *\n * @module\n */\nimport tabix from 'tabix-reader';\n\n\nfunction install(LocusZoom) {\n    const BaseAdapter = LocusZoom.Adapters.get('BaseAdapter');\n\n    /**\n     * Loads data from a remote Tabix file (if the file host has been configured with proper\n     *  CORS and Range header support). For instructions on how to configure a remote file host such as S3 or\n     *  Google Cloud storage to serve files in the manner required, see:\n     *  https://docs.cancergenomicscloud.org/docs/enabling-cross-origin-resource-sharing-cors#CORS\n     *\n     * @alias module:LocusZoom_Adapters~TabixUrlSource\n     * @see {@link module:ext/lz-tabix-source} for required extension and installation instructions\n     * @see module:LocusZoom_Adapters~BaseApiAdapter\n     * @param {function} config.parser_func A function that parses a single line of text and returns (usually) a\n     *  structured object of data fields\n     * @param {string} config.url_data The URL for the bgzipped and tabix-indexed file\n     * @param {string} [config.url_tbi] The URL for the tabix index. Defaults to `url_data` + '.tbi'\n     * @param {number} [config.params.overfetch = 0] Optionally fetch more data than is required to satisfy the\n     *  region query. (specified as a fraction of the region size, 0-1).\n     *  Useful for sources where interesting features might lie near the edges of the plot, eg BED track intervals.\n     */\n    class TabixUrlSource extends BaseAdapter {\n        parseInit(init) {\n            if (!init.parser_func || !init.url_data) {\n                throw new Error('Tabix source is missing required configuration options');\n            }\n            this.parser = init.parser_func;\n            // TODO: In the future, accept a pre-configured reader instance (as an alternative to the URL). Most useful\n            //   for UIs that want to validate the tabix file before adding it to the plot, like LocalZoom.\n            this.url_data = init.url_data;\n            this.url_tbi = init.url_tbi || `${this.url_data}.tbi`;\n\n            // In tabix mode, sometimes we want to fetch a slightly larger region than is displayed, in case a\n            //    feature is on the edge of what the tabix query would return.\n            //    Specify overfetch in units of % of total region size. (\"fetch 10% extra before and after\")\n            const params = init.params || {};\n            this.params = params;\n            this._overfetch = params.overfetch || 0;\n\n            if (this._overfetch < 0 || this._overfetch > 1) {\n                throw new Error('Overfetch must be specified as a fraction (0-1) of the requested region size');\n            }\n\n            // Assuming that the `tabix-reader` library has been loaded via a CDN, this will create the reader\n            // Since fetching the index is a remote operation, all reader usages will be via an async interface.\n            this._reader_promise = tabix.urlReader(this.url_data, this.url_tbi).catch(function () {\n                throw new Error('Failed to create a tabix reader from the provided URL');\n            });\n        }\n\n        fetchRequest(state /*, chain, fields */) {\n            return new Promise((resolve, reject) => {\n                // Ensure that the reader is fully created (and index available), then make a query\n                const region_start = state.start;\n                const region_end = state.end;\n                const extra_amount = this._overfetch * (region_end - region_start);\n\n                const start = state.start - extra_amount;\n                const end = state.end + extra_amount;\n                this._reader_promise.then((reader) => {\n                    reader.fetch(state.chr, start, end, function (data, err) {\n                        if (err) {\n                            reject(new Error('Could not read requested region. This may indicate an error with the .tbi index.'));\n                        }\n                        resolve(data);\n                    });\n                });\n            });\n        }\n\n        normalizeResponse(data) {\n            // Parse the data from lines of text to objects\n            return data.map(this.parser);\n        }\n    }\n\n    LocusZoom.Adapters.add('TabixUrlSource', TabixUrlSource);\n}\n\nif (typeof LocusZoom !== 'undefined') {\n    // Auto-register the plugin when included as a script tag. ES6 module users must register via LocusZoom.use()\n    // eslint-disable-next-line no-undef\n    LocusZoom.use(install);\n}\n\n\nexport default install;\n\n","module.exports = tabix;"],"sourceRoot":""}